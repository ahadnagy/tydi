// Whitespace and comments.
WHITESPACE 	        = _{ (" " | "\n") }
COMMENT 	        = _{ "/*" ~ (!"*/" ~ ANY)* ~ "*/" }

// Identifiers
//ident 		        = {ASCII_ALPHA{1} ~ (ASCII_ALPHANUMERIC | (ASCII_ALPHANUMERIC+ ~ "_"{1} ~ ASCII_ALPHANUMERIC+))*}
ident               = @{(ASCII_ALPHANUMERIC | "_")+}

// Literals
digit               = _{ '0'..'9' }
uint                = { digit ~ (digit | "_")* }
plus                = { "+" }
minus               = { "-" }
exp                 = { ^"e" ~ (plus | minus)? ~ uint }
float                = {uint ~ "." ~ uint? ~ exp? |uint ~ exp}

bool                = {"true" | "false" }

node_if_handle		= { (ident ~ "." ~ ident) }
streamlet_handle	= { (ident ~ "." ~ ident) }

//Assign parameter
parameter_assign	= { ident ~ ":=" ~ ident}

//Parallel patterns
map_stream			= { "MapStream" ~ "(" ~ node ~ ")" }
filter_stream		 = { "FilterStream" ~ "(" ~ node_if_handle ~ ")" }
reduce_stream		= { "ReduceStream" ~ "(" ~ node ~ ")" }
pattern				= { map_stream | filter_stream | reduce_stream }

//Single point-to-point connection
connection			= { node_if_handle ~ "<=" ~  node_if_handle }

//Bulk connection
node_if_handle_list	= { "(" ~ node_if_handle ~ ("," ~ node_if_handle)* ~ (")") }
bulk_connection		= { (ident) ~ ("<=>" ~ (ident))+ }

//Streamlet instantiation
streamlet_inst		= { streamlet_handle ~ ("[" ~ (parameter_assign)+ ~ "]")? }

//A node in the implementation graph
node        		= { ident ~ ":" ~  (pattern | streamlet_inst) }

//Implementation of a streamlet
structural_body = { (( connection | bulk_connection | node) ~ ";")* }
structural			= { "structural" ~ "{" ~ structural_body ~ "}"}
implementation      = { "impl" ~ streamlet_handle ~ structural }
//implementation      = { "implementation of" ~ streamlet_handle ~ "is" ~ connection }